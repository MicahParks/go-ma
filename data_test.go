package ma_test

import (
	"math/big"
)

var (
	bigPrices          = floatToBig(prices)
	bigPricesForSignal = floatToBig(pricesForSignal)
	prices             = []float64{
		459.99,
		448.85,
		446.06,
		450.81,
		442.8,
		448.97,
		444.57,
		441.4,
		430.47,
		420.05,
		431.14,
		425.66,
		430.58,
		431.72,
		437.87,
		428.43,
		428.35,
		432.5,
		443.66,
		455.72,
		454.49,
		452.08,
		452.73,
		461.91,
		463.58,
		461.14,
		452.08,
		442.66,
		428.91,
		429.79,
		431.99,
		427.72,
		423.2,
		426.21,
		426.98,
		435.69,
		434.33,
		429.8,
		419.85,
		426.24,
		402.8,
		392.05,
		390.53,
		398.67,
		406.13,
		405.46,
		408.38,
		417.2,
		430.12,
		442.78,
		439.29,
		445.52,
		449.98,
		460.71,
		458.66,
		463.84,
		456.77,
		452.97,
		454.74,
		443.86,
		428.85,
		434.58,
		433.26,
		442.93,
		439.66,
		441.35,
	}
	pricesForSignal = []float64{
		792.639857,
		-232.957978,
		343.377118,
		72.655827,
		676.345414,
		351.800366,
		957.812796,
		-896.535091,
		654.545038,
		288.294128,
		799.860283,
		-131.214727,
		743.108012,
		-16.858079,
		368.833578,
		-941.864206,
		476.322841,
		648.089113,
		-705.529502,
		-253.114862,
		-624.771339,
		-565.934043,
		727.410359,
		356.684541,
		-919.173731,
		853.399938,
		-234.332102,
		557.963771,
		-491.530097,
		-17.818029,
		348.041193,
		-669.640839,
		837.525813,
		76.769605,
		-598.459694,
		-711.684366,
		-488.867995,
		63.506646,
		-149.856312,
		185.197448,
		-927.771156,
		-235.883917,
		-966.178676,
		-326.236757,
		583.015168,
		673.787887,
		-338.398815,
		-219.468826,
		-168.791705,
		575.638873,
		-747.659354,
		477.933390,
		-252.003321,
		-354.816385,
		-793.342149,
		408.853516,
		-227.484721,
		-887.957320,
		-222.842773,
		780.028570,
		557.231376,
		-246.564108,
		-381.865243,
		387.742421,
		357.889657,
		-94.790218,
		-91.084251,
		744.874023,
		-213.909768,
		902.986694,
		128.980708,
		126.829521,
		-863.226780,
		-875.962415,
		-359.683447,
		946.055512,
		-711.370223,
		531.436638,
		-636.421614,
		573.637881,
		-794.109023,
		961.127703,
		39.838062,
		608.978640,
		660.212545,
		-642.116634,
		839.931697,
		-978.233579,
		-8.509998,
		-268.186138,
		523.279219,
		-976.390553,
		-657.819598,
		858.394291,
		172.956737,
		-360.283391,
		-386.964096,
		796.401353,
		-696.227664,
		-937.304881,
		-1.351088,
		-898.699541,
		-351.529674,
		-706.149135,
		845.216568,
		576.287766,
		-396.787462,
		-548.812200,
		-644.391552,
		538.256698,
		134.553241,
		313.864405,
		459.157443,
		-943.937463,
		558.701379,
		-307.909561,
		252.269144,
		491.686943,
		963.972008,
		-617.091299,
		140.838773,
		-368.520735,
		484.690882,
		387.824498,
		903.128720,
		475.028676,
		-778.522463,
		552.066426,
		139.851297,
		135.861611,
		79.548087,
		-902.060091,
		727.045790,
		874.751410,
		-550.988264,
		340.210251,
		714.059028,
		670.535159,
		-390.181538,
		852.516251,
		-481.872385,
		-742.652104,
		-557.075378,
		-691.458557,
		425.808064,
		-158.703886,
		270.377030,
		360.163591,
		-763.690845,
		-503.615868,
		-644.913749,
		-391.258861,
		169.231309,
		-595.417826,
		-452.013997,
		404.325502,
		-605.409580,
		-25.269461,
		-725.370778,
		-756.105796,
		428.392556,
		99.046782,
		-557.999704,
		-685.750125,
		846.222988,
		344.443369,
		-430.797529,
		-666.653440,
		-780.552954,
		235.347028,
		-665.965822,
		-815.979264,
		-885.166784,
		627.245276,
		-915.360832,
		798.980895,
		258.762936,
		691.362012,
		-583.554879,
		-105.543684,
		-288.741645,
		636.138901,
		-257.178657,
		-424.700037,
		573.568081,
		-485.867088,
		413.970653,
		883.947044,
		-754.028365,
		-908.529031,
		535.353385,
		0.320093,
		107.095279,
		16.654587,
		395.966843,
		-939.399920,
		-527.925600,
		664.103327,
		-109.152669,
		256.114091,
		-86.210568,
		-877.779603,
		-257.332594,
		978.721352,
		-4.192203,
		-910.829211,
		245.661073,
		279.622138,
		-251.425277,
		904.693455,
		83.165897,
		-975.957239,
		-308.060035,
		-28.159341,
		60.814581,
		246.271671,
		-145.196816,
		-318.490487,
		-661.416355,
		-950.334052,
		-25.621024,
		843.073885,
		875.438082,
		655.569874,
		-246.931350,
		-172.281177,
		-715.665826,
		-281.346373,
		719.543203,
		-617.361299,
		-902.602474,
		-403.856265,
		961.055802,
		-705.741799,
		980.558443,
		-887.855294,
		104.204053,
		289.851684,
		-983.589797,
		-213.490693,
		574.500273,
		859.982501,
		532.608914,
		-966.762941,
		649.789146,
		-868.166051,
		705.358885,
		163.808363,
		466.817266,
		793.279875,
		-305.516218,
		-152.248127,
		849.129779,
		188.402781,
		68.267820,
		-424.171203,
		-379.643046,
		-248.434746,
		844.114062,
		704.735428,
		-320.955754,
		345.285047,
		-483.878440,
		721.762684,
		141.212696,
		368.059107,
		-440.413490,
		924.703240,
		994.598318,
		900.990944,
		-258.642794,
		660.801299,
		268.613283,
		460.590194,
		627.441062,
		-203.038551,
		-483.792770,
		-628.147743,
		185.886129,
		843.003116,
		792.961783,
		-458.780321,
		-151.209010,
		486.648479,
		-416.072118,
		-641.567599,
		312.665145,
		852.706819,
		-11.873712,
		563.471927,
		734.077292,
		952.847523,
		-271.548277,
		-161.157333,
		-242.001423,
		-245.040819,
		438.868980,
		-84.800609,
		839.386009,
		-888.557018,
		-645.676773,
		-68.340175,
		437.291048,
		135.089225,
		-9.485765,
		160.445984,
		475.847637,
		81.777453,
		-850.472994,
		-934.649326,
		-739.897165,
		-145.251668,
		824.200627,
		-184.879025,
		-925.059461,
		572.001672,
		-366.116686,
		-5.110395,
		-91.923004,
		-516.514544,
		-564.629429,
		775.639929,
		-854.169839,
		-425.560147,
		271.906300,
		374.524374,
		-737.834215,
		-492.760220,
		396.820316,
		350.646055,
		-493.584377,
		-597.778002,
		669.387865,
		-603.765102,
		213.869764,
		269.594318,
		467.601349,
		-590.897139,
		591.302910,
		-255.671689,
		-775.824165,
		-218.079251,
		279.534060,
		265.774527,
		642.755424,
		-305.821706,
		-187.242660,
		-688.321020,
		-747.699217,
		-495.366585,
		-818.849430,
		698.309146,
		-390.115685,
		-719.056120,
		109.230520,
		-478.001825,
		-406.695373,
		694.058298,
		-563.159342,
		92.433824,
		303.036880,
		191.794841,
		485.654822,
		345.778775,
		823.954146,
		557.781879,
		-22.386990,
		447.427969,
		915.496699,
		-786.555356,
		898.914165,
		342.788616,
		-84.859861,
		-888.794874,
		-576.992373,
		519.509031,
		460.899179,
		-862.452785,
		916.724843,
		291.386255,
		204.841930,
		-586.092553,
		971.549398,
		620.086482,
		196.200614,
		-908.799749,
		838.338844,
		-142.919143,
		128.977402,
		-886.243504,
		960.529448,
		814.663488,
		155.438183,
		-783.073134,
		760.892478,
		852.851803,
		-505.393431,
		-148.382381,
		-802.172302,
		-457.559358,
		349.697389,
		582.748762,
		-761.172654,
		-33.505462,
		-886.823582,
		926.633498,
		-789.377528,
		693.665417,
		646.513797,
		449.491042,
		866.006997,
		344.685580,
		834.927308,
		-953.313852,
		-281.658064,
		126.669398,
		425.166557,
		-213.713059,
		-212.823473,
		-754.210903,
		474.638776,
		-444.816211,
		-550.095372,
		404.349187,
		405.957304,
		-139.706893,
		386.389222,
		-329.802287,
		738.909916,
		-581.709350,
		-52.252740,
		-974.401277,
		-277.869497,
		-231.056734,
		-879.748876,
		477.027135,
		-736.188963,
		-407.487719,
		666.074986,
		533.437595,
		-365.548650,
		688.163076,
		-280.571247,
		-727.033976,
		746.175057,
		-283.853642,
		-27.696595,
		581.163672,
		-773.263646,
		460.678973,
		-150.894272,
		578.168730,
		-229.756904,
		156.674291,
		-309.481448,
		429.865518,
		-658.308470,
		363.810621,
		-621.885144,
		875.140690,
		-289.365906,
		-389.392394,
		6.748014,
		262.792605,
		-960.481756,
		-133.684263,
		943.803695,
		11.154476,
		114.158592,
		-545.999644,
		-906.276019,
		141.339755,
		-19.035620,
		-23.496036,
		-284.659679,
		-604.966933,
		70.236891,
		-568.930832,
		-706.682967,
		-162.914748,
		-409.716565,
		-761.183880,
		357.596607,
		-447.199971,
		-541.105256,
		465.790887,
		-159.235611,
		124.908773,
		756.475969,
		-179.309044,
		389.302703,
		-413.088790,
		-6.752081,
		-531.475731,
		762.740989,
		411.770531,
		-435.784360,
		-309.454134,
		-491.000763,
		-943.803719,
	}
	results = []float64{
		7.70337838145673003964475356042385101318359375,
		6.41607475695587936570518650114536285400390625,
		4.23751978326481548720039427280426025390625000,
		2.55258332486573635833337903022766113281250000,
		1.37888571985365615546470507979393005371093750,
		0.10298149119910249282838776707649230957031250,
		-1.25840195280312627801322378218173980712890625,
		-2.07055819009491415272350423038005828857421875,
		-2.62184232825688923185225576162338256835937500,
		-2.32906674045494810343370772898197174072265625,
		-2.18163211479298979611485265195369720458984375,
		-2.40262627286642782564740628004074096679687500,
		-3.34212168135286447068210691213607788085937500,
		-3.53036313607753982068970799446105957031250000,
		-5.50747124862732562178280204534530639648437500,
		-7.85127422856083967417362146079540252685546875,
		-9.71936745524880052471417002379894256591796875,
		-10.42286650800718916798359714448451995849609375,
		-10.26016215893747585141682066023349761962890625,
		-10.06920961013429405284114181995391845703125000,
		-9.57191961195360363490181043744087219238281250,
		-8.36963349244507526236702688038349151611328125,
		-6.30163572368542190815787762403488159179687500,
		-3.59968150914517082128440961241722106933593750,
		-1.72014836089687150888494215905666351318359375,
		0.26900323229938294389285147190093994140625000,
		2.18017324711348692289902828633785247802734375,
		4.50863780861044460834818892180919647216796875,
		6.11802015384472497316892258822917938232421875,
		7.72243059351438887460972182452678680419921875,
		8.32745380871403995115542784333229064941406250,
		8.40344118462587630347115918993949890136718750,
		8.50840632319352607737528160214424133300781250,
		7.62576184402922763183596543967723846435546875,
		5.64994908292868558419286273419857025146484375,
		4.49465476488205695204669609665870666503906250,
		3.43298936168440604888019151985645294189453125,
		3.33347385363293824411812238395214080810546875,
		2.95666285611525836429791525006294250488281250,
		2.76256121582525793201057240366935729980468750,
	}
	smaResults = []float64{
		440.51200000000005729816621169447898864746093750,
		438.19300000000004047251422889530658721923828125,
		436.64500000000009549694368615746498107910156250,
		434.73600000000004683897714130580425262451171875,
		434.24300000000005184119800105690956115722656250,
		432.18900000000002137312549166381359100341796875,
		430.56700000000000727595761418342590332031250000,
		429.67699999999996407495927996933460235595703125,
		430.99599999999992405719240196049213409423828125,
		434.56299999999993133315001614391803741455078125,
		436.89799999999996771293808706104755401611328125,
		439.53999999999996362021192908287048339843750000,
		441.75499999999993860910763032734394073486328125,
		444.77400000000000090949470177292823791503906250,
		447.34499999999997044142219237983226776123046875,
		450.61599999999998544808477163314819335937500000,
		452.98899999999991905497154220938682556152343750,
		454.00499999999993860910763032734394073486328125,
		452.52999999999991587174008600413799285888671875,
		449.93700000000001182343112304806709289550781250,
		447.68700000000001182343112304806709289550781250,
		445.25100000000003319655661471188068389892578125,
		442.29799999999994497557054273784160614013671875,
		438.72799999999995179678080603480339050292968750,
		435.06800000000004047251422889530658721923828125,
		432.52300000000002455635694786906242370605468750,
		430.74800000000004729372449219226837158203125000,
		429.46200000000010277290130034089088439941406250,
		428.55600000000004001776687800884246826171875000,
		428.20100000000002182787284255027770996093750000,
		425.28199999999998226485331542789936065673828125,
		421.71499999999997498889570124447345733642578125,
		418.44800000000003592504072003066539764404296875,
		415.69400000000007366907084360718727111816406250,
		413.60900000000003728928277269005775451660156250,
		410.58600000000006957634468562901020050048828125,
		407.99100000000009913492249324917793273925781250,
		406.73100000000005138645065017044544219970703125,
		407.75799999999998135535861365497112274169921875,
		409.41199999999997771737980656325817108154296875,
		413.06099999999997862687450833618640899658203125,
		418.40800000000001546140993013978004455566406250,
		424.35299999999995179678080603480339050292968750,
		430.55699999999995952748577110469341278076171875,
		435.80999999999994543031789362430572509765625000,
		441.64799999999996771293808706104755401611328125,
		446.48699999999996634869603440165519714355468750,
		450.06399999999996452970663085579872131347656250,
		452.52599999999995361577020958065986633300781250,
		452.63399999999990086507750675082206726074218750,
		451.58999999999997498889570124447345733642578125,
		450.49599999999998090061126276850700378417968750,
		448.82399999999995543475961312651634216308593750,
		447.04599999999999226929503493010997772216796875,
		445.14600000000001500666257925331592559814453125,
		442.89699999999993451638147234916687011718750000,
	}
	signalResults = []*bool{
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{true}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{false}[0],
		&[]bool{true}[0],
		nil,
		&[]bool{false}[0],
		nil,
		nil,
		nil,
		nil,
		&[]bool{true}[0],
		nil,
		nil,
		&[]bool{false}[0],
		&[]bool{true}[0],
		nil,
		nil,
		&[]bool{false}[0],
		&[]bool{true}[0],
		&[]bool{false}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{true}[0],
		&[]bool{false}[0],
		&[]bool{true}[0],
		nil,
		nil,
		&[]bool{false}[0],
		&[]bool{true}[0],
		nil,
		&[]bool{false}[0],
		&[]bool{true}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{false}[0],
		&[]bool{true}[0],
		nil,
		nil,
		nil,
		&[]bool{false}[0],
		nil,
		nil,
		nil,
		&[]bool{true}[0],
		&[]bool{false}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{true}[0],
		&[]bool{false}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{true}[0],
		nil,
		nil,
		nil,
		&[]bool{false}[0],
		nil,
		&[]bool{true}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{false}[0],
		&[]bool{true}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{false}[0],
		&[]bool{true}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{false}[0],
		nil,
		&[]bool{true}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{false}[0],
		nil,
		nil,
		nil,
		&[]bool{true}[0],
		nil,
		&[]bool{false}[0],
		&[]bool{true}[0],
		nil,
		nil,
		nil,
		nil,
		&[]bool{false}[0],
		&[]bool{true}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{false}[0],
		nil,
		&[]bool{true}[0],
		&[]bool{false}[0],
		&[]bool{true}[0],
		&[]bool{false}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{true}[0],
		&[]bool{false}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{true}[0],
		nil,
		&[]bool{false}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{true}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{false}[0],
		&[]bool{true}[0],
		&[]bool{false}[0],
		&[]bool{true}[0],
		nil,
		nil,
		nil,
		nil,
		&[]bool{false}[0],
		&[]bool{true}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{false}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{true}[0],
		&[]bool{false}[0],
		nil,
		&[]bool{true}[0],
		&[]bool{false}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{true}[0],
		&[]bool{false}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{true}[0],
		nil,
		&[]bool{false}[0],
		nil,
		&[]bool{true}[0],
		nil,
		nil,
		&[]bool{false}[0],
		&[]bool{true}[0],
		&[]bool{false}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{true}[0],
		&[]bool{false}[0],
		&[]bool{true}[0],
		nil,
		nil,
		&[]bool{false}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{true}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{false}[0],
		&[]bool{true}[0],
		nil,
		&[]bool{false}[0],
		&[]bool{true}[0],
		nil,
		&[]bool{false}[0],
		&[]bool{true}[0],
		nil,
		nil,
		&[]bool{false}[0],
		nil,
		nil,
		&[]bool{true}[0],
		&[]bool{false}[0],
		&[]bool{true}[0],
		&[]bool{false}[0],
		&[]bool{true}[0],
		&[]bool{false}[0],
		&[]bool{true}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{false}[0],
		nil,
		nil,
		&[]bool{true}[0],
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		nil,
		&[]bool{false}[0],
		&[]bool{true}[0],
		nil,
		nil,
		nil,
	}
)

func floatToBig(s []float64) (b []*big.Float) {
	l := len(s)
	b = make([]*big.Float, l)
	for i := 0; i < l; i++ {
		b[i] = big.NewFloat(s[i])
	}
	return b
}
